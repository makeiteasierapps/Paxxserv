name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Deploy using cloudflared
      env:
        CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
      run: |
        # Install cloudflared
        curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -o cloudflared
        chmod +x cloudflared
        
        # Login and run remote commands through the tunnel
        echo $CLOUDFLARE_TOKEN | ./cloudflared tunnel token
        ./cloudflared tunnel --token $CLOUDFLARE_TOKEN run << 'EOF'
          cd ~/projects/paxxserv
          
          # Store the old requirements.txt hash
          OLD_HASH=$(md5sum requirements.txt 2>/dev/null | awk '{ print $1 }')
          
          git pull
          
          # Check if requirements.txt has changed
          NEW_HASH=$(md5sum requirements.txt | awk '{ print $1 }')
          
          if [ "$OLD_HASH" != "$NEW_HASH" ]; then
            echo "requirements.txt has changed. Updating packages..."
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
            deactivate
            echo "Packages updated successfully."
          else
            echo "No changes in requirements.txt. Skipping package updates."
          fi
          
          sudo systemctl restart paxxserv.service
        EOF